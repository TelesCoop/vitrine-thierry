---

- name: Install misc packages
  apt:
    name:
      - sqlite3
      - python3-venv
      - nginx
      - supervisor

- name: Create main user
  user:
    name: "{{ main_user }}"
    uid: "{{ main_user_uid }}"

- name: Create directories and set permissions
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  loop:
    - path: "/{{ organization_slug }}"
      mode: '2775'
      owner: "root"
    - path: "/{{ organization_slug }}/{{ project_slug }}"
      mode: '2775'
      owner: "{{ main_user }}"
    - path: "/etc/{{ organization_slug }}"
      mode: '2775'
      owner: "{{ main_user }}"
    - path: "/etc/{{ organization_slug }}/{{ project_slug }}"
      mode: '2775'
      owner: "{{ main_user }}"
    - path: "{{ var_log_path }}"
      mode: '2770'
      owner: "{{ main_user }}"
    - path: "{{ venv.path }}"
      mode: '0755'
      owner: "{{ main_user }}"

- name: Create backend venv
  command:
    cmd: python3 -m venv --system-site-packages {{ venv.path }}
    creates: "{{ venv.path }}/bin/python"
  become: true
  become_user: "{{ main_user }}"

- name: Install {{ project_slug }}-ctl
  template:
    src: backend-ctl.j2
    dest: "/usr/local/bin/{{ project_slug }}-ctl"
    mode: "0755"

- name: Copy django settings
  template:
    src: settings.ini.j2
    dest: "/etc/{{ organization_slug }}/{{ project_slug }}/settings.ini"
    owner: "{{ main_user }}"
    group: devops
    mode: 0660

- name: Copy supervisord config
  template:
    src: supervisor.conf.j2
    dest: "{{ supervisor_conf }}/{{ project_slug }}.conf"
    owner: root
    group: root
    mode: 0644

- name: Install {{ project_slug }} supervisor
  supervisorctl:
    name: "{{ project_slug }}"
    state: present

- name: Generate /etc/ssh/ RSA host key
  command: "ssh-keygen -q -t ed25519 -a 100 -f {{ identity_file_path }} -C \"\" -N \"\""
  become_user: "{{ main_user }}"
  args:
    creates: "{{ identity_file_path }}"
  register: new_ssh_key

- name: WARNING ABOUT new ssh key
  debug:
    msg: |
      IMPORTANT REMINDER

      A new ssh key has been generated at {{ identity_file_path }}
      - it should be added to the project deploy keys in Gitlab/Github
      so that we can clone it.
  when: new_ssh_key.changed

- name: Get new ssh key contents
  command: "cat {{ identity_file_path }}.pub"
  register: command_output
  when: new_ssh_key.changed

- name: Print ssh key to console
  debug:
    msg: "{{command_output.stdout}}"
  when: new_ssh_key.changed

- name: get latest code
  git:
    repo: '{{ backend_repo }}'
    dest: "{{ backend_path }}"
    key_file: "{{ identity_file_path }}"
    force: true
    version: main
    accept_hostkey: true
  become_user: "{{ main_user }}"
  register: clonecode

- name: Install python dependencies
  command:
    cmd: "{{ venv.path }}/bin/pip install -r requirements.txt"
    chdir: "{{ backend_path }}"
  when: clonecode.changed or force_update is defined

- name: run migrations
  command:
    cmd: "/usr/local/bin/{{ project_slug }}-ctl migrate"
  become: true
  become_user: "{{ main_user }}"
  when: clonecode.changed or force_update is defined

- name: collect backend static files
  command:
    cmd: "/usr/local/bin/{{ project_slug }}-ctl collectstatic --no-input"
  when: clonecode.changed or force_update is defined

- name: Restart {{ project_slug }} supervisor
  supervisorctl:
    name: "{{ project_slug }}"
    state: restarted
  when: clonecode.changed or force_update is defined

- include: cron.yml
