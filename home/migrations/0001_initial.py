# Generated by Django 4.0.6 on 2022-10-12 09:22

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.routable_page.models
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0024_index_image_file_hash'),
        ('wagtailcore', '0077_alter_revision_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticlesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nav_name', models.CharField(default='Accueil', help_text="Ce nom d'affichera dans la barre de navigation", max_length=36, verbose_name='Nom dans le menu')),
            ],
            options={
                'verbose_name': 'Page des articles',
                'verbose_name_plural': 'Pages des articles',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='ArticleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Exemple: Poème, Extrait de catalogue', max_length=100, verbose_name='Nom')),
            ],
            options={
                'verbose_name': "Type d'article",
            },
        ),
        migrations.CreateModel(
            name='ArtworksPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nav_name', models.CharField(default='Accueil', help_text="Ce nom d'affichera dans la barre de navigation", max_length=36, verbose_name='Nom dans le menu')),
            ],
            options={
                'verbose_name': 'Page des galeries',
                'verbose_name_plural': 'Pages des galeries',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='FriendlySite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('link', models.CharField(max_length=255, verbose_name='Lien')),
                ('display', models.BooleanField(default=True, verbose_name='Afficher')),
            ],
            options={
                'verbose_name': 'Site ami',
                'verbose_name_plural': 'Sites amis',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('color', models.CharField(choices=[('gallery-blue', 'Bleue'), ('gallery-purpule', 'Violet'), ('gallery-orange', 'Orange'), ('gallery-cyan', 'Cyan'), ('gallery-green', 'Vert'), ('gallery-yellow', 'Jaune'), ('gallery-red', 'Rouge')], default='gallery-blue', help_text='Choisir la couleur de la galerie', max_length=32)),
            ],
            options={
                'verbose_name': 'Galerie',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nav_name', models.CharField(default='Accueil', help_text="Ce nom d'affichera dans la barre de navigation", max_length=36, verbose_name='Nom dans le menu')),
                ('artist_name', models.CharField(blank=True, help_text="Si ce champs est vide alors cette partie ne s'affichera pas dans l'Accueil", max_length=100, null=True, verbose_name='Nom')),
                ('artist_body', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Description')),
                ('artworks_highlight_title', models.CharField(blank=True, help_text="Si ce champs est vide alors cette partie ne s'affichera pas dans l'Accueil", max_length=100, null=True, verbose_name='Titre')),
                ('artist_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': "Page d'Accueil",
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ReferenceSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('link', models.CharField(max_length=255, verbose_name='Lien')),
                ('display', models.BooleanField(default=True, verbose_name='Afficher')),
            ],
            options={
                'verbose_name': 'Site référence',
                'verbose_name_plural': 'Sites références',
            },
        ),
        migrations.CreateModel(
            name='WorkExperiencePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nav_name', models.CharField(default='Accueil', help_text="Ce nom d'affichera dans la barre de navigation", max_length=36, verbose_name='Nom dans le menu')),
                ('body', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Introduction de la page parcours')),
                ('parcours_block_data', wagtail.fields.StreamField([('chapters', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(label='Titre')), ('steps', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('date', wagtail.blocks.CharBlock(label='Date', required=False)), ('richtext', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link', 'ol', 'ul'], label='Description'))], label='Les différentes étapes de ton parcours', label_format='{date}'), label='Etapes'))], label='Parties de ton parcours', label_format='{title}'))], blank=True, use_json_field=True, verbose_name='Parcours')),
            ],
            options={
                'verbose_name': 'Page du parcours',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='PresentationPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('nav_name', models.CharField(default='Accueil', help_text="Ce nom d'affichera dans la barre de navigation", max_length=36, verbose_name='Nom dans le menu')),
                ('body', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='Contenu de la page de présentation')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Page de presentation',
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='BannerSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('navbar_banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.site')),
            ],
            options={
                'verbose_name': 'Banière-image',
            },
        ),
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Titre')), ('richtext', wagtail.blocks.RichTextBlock(label='Paragraphe')), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('pdf', wagtail.documents.blocks.DocumentChooserBlock(label='PDF'))], blank=True, help_text='Corps de la page', use_json_field=True, verbose_name='Contenu')),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'oeuvre")),
                ('slug', models.SlugField(blank=True, default='', max_length=100, unique=True, verbose_name='Slug (URL de la ressource)')),
                ('short_description', models.CharField(max_length=256, verbose_name='Description courte')),
                ('galleries', models.ManyToManyField(blank=True, related_name='artworks', to='home.gallery', verbose_name='Galeries')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image principale')),
            ],
            options={
                'verbose_name': 'Oeuvre',
                'verbose_name_plural': 'Oeuvres',
                'ordering': ['-created'],
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Titre')), ('richtext', wagtail.blocks.RichTextBlock(label='Paragraphe')), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('pdf', wagtail.documents.blocks.DocumentChooserBlock(label='PDF'))], blank=True, help_text='Corps de la page', use_json_field=True, verbose_name='Contenu')),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'article")),
                ('slug', models.SlugField(blank=True, default='', max_length=100, unique=True, verbose_name="Slug (URL de l'article)")),
                ('short_description', models.CharField(max_length=256, verbose_name='Description courte')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image principale')),
                ('pdf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document', verbose_name='Document principal')),
                ('types', models.ManyToManyField(blank=True, related_name='articles', to='home.articletype', verbose_name="Types d'article")),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-created'],
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='HomePageArtworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artworks_highlight', to='home.artwork', verbose_name='Oeuvre')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='artworks_highlight', to='home.homepage')),
            ],
            options={
                'unique_together': {('page', 'artwork')},
            },
        ),
    ]
